# .github/workflows/ci-cd.yml
name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Or whatever your main branch is
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build Docker image
        run: docker build -t book-api .

      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Tag and push Docker image to ECR
        run: |
          docker tag book-api:latest ${{ steps.login-ecr.outputs.registry }}/book-api:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/book-api:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to AWS ECS
        uses: aws-actions/ecs-deploy@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          service: random-book-service-1234
          cluster: random-book-cluster-5678
          task-definition: task-definition.json # Ensure this file exists.
          force-new-deployment: true

  monitor:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Monitor API Health
        uses: actions/http-client@v2
        with:
          url: http://random-book-api-9876.us-east-1.elb.amazonaws.com/health
          method: GET
          expected-status-code: 200